{"version":3,"sources":["components/weather.jsx","components/input.jsx","App.js","serviceWorker.js","index.js"],"names":["Weather","props","flag","country","toLowerCase","className","id","city","src","alt","main_temp","weatherIcon","feels_like","min","max","description","Input","records0","records1","records2","records3","records4","country0","country1","country2","country3","name0","name1","name2","name3","country4","searchSelection","name","alternate_names","country_code","numOfEl","split_names","split","push","res","i","length","element","startsWith","inputValue","includes","rec","num","searchResults","fields","input0","input1","input2","input3","name4","onSubmit","loadWeather","placeholder","onInput","searchLive","autoComplete","onBlur","setTimeout","document","getElementById","style","display","maxLength","onFocus","value","onClick","clearInput","WeatherApp","state","getElement","requestSities","a","fetch","callAPI","json","response","getWeather","charAt","toUpperCase","slice","btn","btn0","btn1","btn2","btn3","btn4","setState","records","innerText","event","querySelector","preventDefault","searchBar","cityResponse","requestWeather","whatRequest","request","set","switchLoader","hideAllContent","cod","sys","calculateCulsius","main","temp","weather","temp_max","temp_min","getWeatherIcon","nhits","geoname_id","ascii_name","response3","blur","Math","floor","rangeId","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","App","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uRAqCeA,MAhCf,SAAiBC,GAEb,IAAIC,EAAO,KAIX,OAHID,EAAME,UACND,EAAOD,EAAME,QAAQC,eAGrB,yBAAKC,UAAU,YACX,yBAAKC,GAAG,QACA,6BAAK,6BAAK,6BAAK,8BAEvB,yBAAKA,GAAG,WACJ,4BAAKL,EAAMM,KAAX,KAAmBN,EAAME,SACzB,yBAAKK,IAAG,kBAAaN,EAAb,QAAyBO,IAAI,SACrC,yBAAKJ,UAAU,QACP,6BACI,4BAAKJ,EAAMS,UAAX,SAEJ,6BACI,uBAAGL,UAAS,aAAQJ,EAAMU,iBAGtC,yBAAKN,UAAU,cACX,wBAAIA,UAAU,cAAd,0DAAsCJ,EAAMW,WAA5C,QACA,wBAAIP,UAAU,UAAd,sBAA4BJ,EAAMY,IAAlC,iCAAkDZ,EAAMa,IAAxD,QACA,wBAAIT,UAAU,eAAeJ,EAAMc,iBCwHxCC,MAnJf,SAAef,GAEX,IAAIgB,EAAUC,EAAUC,EAAUC,EAAUC,EAAUC,EAAUC,EAAUC,EAAUC,EAkDhFC,EAAOC,EAAOC,EAAOC,EAlDqEC,EAAW,KAEnGC,EAAkB,SAACC,EAAMC,EAAiBC,EAAcC,GAC1D,IAAIC,EAAc,GACdH,IAAiBG,EAAcH,EAAgBI,MAAM,MACzDD,EAAYE,KAAKN,GAGjB,IADA,IAAIO,EAAM,GACDC,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IAAK,CACzC,IAAME,EAAUN,EAAYI,KACiB,IAAzCE,EAAQC,WAAW1C,EAAM2C,aAAwBF,EAAQG,SAAS5C,EAAM2C,cACxEL,EAAID,KAAKI,GAID,IAAZP,GACAlB,EAAWsB,EAAI,GACfjB,EAAWY,EAAa9B,eAEP,IAAZ+B,GACLjB,EAAWqB,EAAI,GACfhB,EAAWW,EAAa9B,eAEP,IAAZ+B,GACLhB,EAAWoB,EAAI,GACff,EAAWU,EAAa9B,eAEP,IAAZ+B,GACLf,EAAWmB,EAAI,GACfd,EAAWS,EAAa9B,eAEP,IAAZ+B,IACLd,EAAWkB,EAAI,GACfT,EAAWI,EAAa9B,gBAG1B0C,EAAM,SAACC,GAKT,MADU,CAAEf,KAHD/B,EAAM+C,cAAcD,GAAKE,OAAOjB,KAGzBC,gBAFIhC,EAAM+C,cAAcD,GAAKE,OAAOhB,gBAEnB9B,QADrBF,EAAM+C,cAAcD,GAAKE,OAAOf,eAI9CgB,EAAS,WAAQ,IAAIX,EAAMO,EAAI,GAAIpB,EAAQa,EAAIP,KAAMV,EAAWiB,EAAIpC,QAAS4B,EAAgBQ,EAAIP,KAAMO,EAAIN,gBAAiBM,EAAIpC,QAAS,IACzIgD,EAAS,WAAQ,IAAIZ,EAAMO,EAAI,GAAInB,EAAQY,EAAIP,KAAMT,EAAWgB,EAAIpC,QAAS4B,EAAgBQ,EAAIP,KAAMO,EAAIN,gBAAiBM,EAAIpC,QAAS,IACzIiD,EAAS,WAAQ,IAAIb,EAAMO,EAAI,GAAIlB,EAAQW,EAAIP,KAAMR,EAAWe,EAAIpC,QAAS4B,EAAgBQ,EAAIP,KAAMO,EAAIN,gBAAiBM,EAAIpC,QAAS,IACzIkD,EAAS,WAAQ,IAAId,EAAMO,EAAI,GAAIjB,EAAQU,EAAIP,KAAMP,EAAWc,EAAIpC,QAAS4B,EAAgBQ,EAAIP,KAAMO,EAAIN,gBAAiBM,EAAIpC,QAAS,IAGzIoC,EAAM,KACsBe,EAAQ,KACxC,OAAQrD,EAAM+C,cAAcP,QACxB,KAAK,EACDS,IACAhC,EAAW,KAAMC,EAAW,KAAMC,EAAW,KAAMC,EAAW,KAC9D,MACJ,KAAK,EACD6B,IAAUC,IACVhC,EAAW,KAAMC,EAAW,KAAMC,EAAW,KAC7C,MACJ,KAAK,EACD6B,IAAUC,IAAUC,IACpBhC,EAAW,KAAOC,EAAW,KAC7B,MACJ,KAAK,EACD6B,IAAUC,IAAUC,IAAUC,IAC9BhC,EAAW,KACX,MACJ,KAAK,EACD6B,IAAUC,IAAUC,IAAUC,IAtBjBd,EAAMO,EAAI,GAAIQ,EAAQf,EAAIP,KAAMF,EAAWS,EAAIpC,QAAS4B,EAAgBQ,EAAIP,KAAMO,EAAIN,gBAAiBM,EAAIpC,QAAS,GAuBjI,MAEJ,QACIc,EAAW,KAAMC,EAAW,KAAMC,EAAW,KAAMC,EAAW,KAAMC,EAAW,KAUvF,OACA,yBAAKhB,UAAU,aACX,0BAAMkD,SAAUtD,EAAMuD,YAAalD,GAAG,SAClC,4BAAQA,GAAG,YAAX,gEACA,2BAAO0B,KAAK,YACZ3B,UAAU,YACVC,GAAG,YACHmD,YAAY,+FACZC,QAASzD,EAAM0D,WACfC,aAAa,MACbC,OAfc,WAClBC,YAAW,WACPC,SAASC,eAAe,eAAeC,MAAMC,QAAU,SACxD,MAaCC,UAAU,KACVC,QAAS,WAAOL,SAASC,eAAe,aAAaK,MAAM,OAI/D,2BAAO/D,GAAG,eAAc,+BACpB,4BAAI,4BACA,4BACAA,GAAG,OACHgE,QAAS,kBAAIrE,EAAMsE,WAAW7C,EAAOJ,KAChCL,EACD,yBAAKZ,UAAU,YAAYG,IAAG,kBAAac,EAAb,QAA6Bb,IAAI,YAGvE,4BAAI,4BACA,4BACAH,GAAG,OACHgE,QAAS,kBAAIrE,EAAMsE,WAAW5C,EAAOJ,KAChCL,EACD,yBAAKb,UAAU,YAAYG,IAAG,kBAAae,EAAb,QAA6Bd,IAAI,YAGvE,4BAAI,4BACA,4BACAH,GAAG,OACHgE,QAAS,kBAAIrE,EAAMsE,WAAW3C,EAAOJ,KAChCL,EACD,yBAAKd,UAAU,YAAYG,IAAG,kBAAagB,EAAb,QAA6Bf,IAAI,YAGvE,4BAAI,4BACA,4BACAH,GAAG,OACHgE,QAAS,kBAAIrE,EAAMsE,WAAW1C,EAAOJ,KAChCL,EACD,yBAAKf,UAAU,YAAYG,IAAG,kBAAaiB,EAAb,QAA6BhB,IAAI,YAGvE,4BAAI,4BACA,4BACAH,GAAG,OACHgE,QAAS,kBAAIrE,EAAMsE,WAAWjB,EAAOxB,KAChCT,EACD,yBAAKhB,UAAU,YAAYG,IAAG,kBAAasB,EAAb,QAA6BrB,IAAI,gBCsEpE+D,E,YAhMb,aAAc,IAAD,8BACX,+CAbFC,MAAQ,CACNlE,KAAM,KACNJ,QAAS,KACTO,UAAW,KACXE,WAAY,KACZG,YAAa,KACbJ,YAAa,KACbG,IAAK,KACLD,IAAK,KACLmC,cAAe,GACfJ,WAAY,MAED,EAYb8B,WAAa,SAACL,GAEZ,OADUN,SAASC,eAAeK,IAbvB,EAgBbM,cAhBa,sBAgBG,8BAAAC,EAAA,sEACMC,MAAM,uHAAD,OAAwH,EAAKH,WAAW,aAAaL,MAArJ,yCADX,cACVS,EADU,gBAEOA,EAAQC,OAFf,cAEVC,EAFU,yBAGPA,GAHO,2CAhBH,EAsBbT,WAAa,SAACvC,EAAM7B,GAClB,EAAKuE,WAAW,aAAaL,MAAQrC,EAAO,KAAM7B,EAClD,EAAK8E,WAAW,KAAM,gBACtB,EAAKP,WAAW,eAAeT,MAAMC,QAAU,QAzBpC,EA4BbP,WA5Ba,sBA4BA,gCAAAiB,EAAA,6DACPP,EAAQ,EAAKK,WAAW,aAAaL,MAAMa,OAAO,GAAGC,cAAgB,EAAKT,WAAW,aAAaL,MAAMe,MAAM,GAC9GC,EAAM,CACRC,KAAM,EAAKZ,WAAW,QACtBa,KAAM,EAAKb,WAAW,QACtBc,KAAM,EAAKd,WAAW,QACtBe,KAAM,EAAKf,WAAW,QACtBgB,KAAM,EAAKhB,WAAW,SAPb,SASU,EAAKC,gBATf,OASPK,EATO,OAWX,EAAKW,SAAS,CACZ3C,cAAegC,EAASY,QACxBhD,WAAYyB,IAGa,KAAvBgB,EAAIC,KAAKO,WAA2C,KAAvBR,EAAIE,KAAKM,WAA2C,KAAvBR,EAAIG,KAAKK,WAA2C,KAAvBR,EAAII,KAAKI,WAA2C,KAAvBR,EAAIK,KAAKG,UAC/H,EAAKnB,WAAW,eAAeT,MAAMC,QAAU,QAC1C,EAAKQ,WAAW,eAAeT,MAAMC,QAAU,OAEtDmB,EAAIC,KAAKrB,MAAMC,QAAU,OACzBmB,EAAIE,KAAKtB,MAAMC,QAAU,OACzBmB,EAAIG,KAAKvB,MAAMC,QAAU,OACzBmB,EAAII,KAAKxB,MAAMC,QAAU,OACzBmB,EAAIK,KAAKzB,MAAMC,QAAU,OAEE,KAAvBmB,EAAIC,KAAKO,YAAkBR,EAAIC,KAAKrB,MAAMC,QAAU,SAC7B,KAAvBmB,EAAIE,KAAKM,YAAkBR,EAAIE,KAAKtB,MAAMC,QAAU,SAC7B,KAAvBmB,EAAIG,KAAKK,YAAkBR,EAAIG,KAAKvB,MAAMC,QAAU,SAC7B,KAAvBmB,EAAII,KAAKI,YAAkBR,EAAII,KAAKxB,MAAMC,QAAU,SAC7B,KAAvBmB,EAAIK,KAAKG,YAAkBR,EAAIK,KAAKzB,MAAMC,QAAU,SA9B7C,4CA5BA,EA6Dbe,WA7Da,uCA6DA,WAAOa,GAAP,6BAAAlB,EAAA,6DACXb,SAASgC,cAAc,YAAY9B,MAAMC,QAAU,OACnDH,SAASgC,cAAc,aAAa9B,MAAMC,QAAU,QACpDH,SAASgC,cAAc,SAAS9B,MAAMC,QAAU,QAE5C4B,GAAOA,EAAME,iBAEjB,EAAKtB,WAAW,eAAeT,MAAMC,QAAU,OAC3C+B,EAAY,EAAKvB,WAAW,aARrB,SASc,EAAKC,gBATnB,UASPuB,EATO,OAUPC,EAVO,+BAAAvB,EAAA,MAUU,WAAOwB,EAAYC,GAAnB,iBAAAzB,EAAA,sEACCC,MAAM,mDAAD,OAAoDuB,EAApD,YAAmEC,EAAnE,kBAxFnB,mCAwFmB,aADN,cACfvB,EADe,gBAEEA,EAAQC,OAFV,cAEfC,EAFe,yBAGZA,GAHY,2CAVV,wDAePsB,EAAM,SAAC/F,EAAMJ,EAASO,EAAWE,EAAYG,EAAaD,EAAKD,GACjE,EAAK8E,SAAS,CACZpF,KAAMA,EACNJ,QAASA,EACTO,UAAWA,EACXE,WAAYA,EACZG,YAAaA,EACbD,IAAKA,EACLD,IAAKA,KAGL0F,EAAe,WACfxC,SAASgC,cAAc,SAAS9B,MAAMC,QAAU,OAChDH,SAASgC,cAAc,YAAY9B,MAAMC,QAAU,SAEnDsC,EAAiB,WACnBzC,SAASgC,cAAc,YAAY9B,MAAMC,QAAU,OACnDH,SAASgC,cAAc,aAAa9B,MAAMC,QAAU,OACpDH,SAASgC,cAAc,SAAS9B,MAAMC,QAAU,QAG1B,KAApB+B,EAAU5B,OAAoC,qFAApB4B,EAAU5B,MApC7B,kCAqCY8B,EAAe,IAAKF,EAAU5B,OArC1C,WAqCLW,EArCK,OAsCTiB,EAAU5B,MAAQW,EAAShD,KAEN,MAAjBgD,EAASyB,IAxCJ,iBAyCPH,EAAItB,EAAShD,KAAMgD,EAAS0B,IAAIvG,QAAS,EAAKwG,iBAAiB3B,EAAS4B,KAAKC,MAAO,EAAKF,iBAAiB3B,EAAS4B,KAAKhG,YAAaoE,EAAS8B,QAAQ,GAAG/F,YAAa,EAAK4F,iBAAiB3B,EAAS4B,KAAKG,UAAW,EAAKJ,iBAAiB3B,EAAS4B,KAAKI,WACzP,EAAKC,eAAejC,EAAS8B,QAAQ,GAAGxG,IACxCiG,IA3CO,6BA6CAL,EAAagB,OAAS,GA7CtB,wBA8CPjB,EAAU5B,MAAV,mDA9CO,UA+CU8B,EAAe,KAAMD,EAAaN,QAAQ,GAAG3C,OAAOkE,YA/C9D,WAgDc,OADrBnC,EA/CO,QAgDMyB,IAhDN,iBAiDHH,EAAItB,EAAShD,KAAMgD,EAAS0B,IAAIvG,QAAS,EAAKwG,iBAAiB3B,EAAS4B,KAAKC,MAAO,EAAKF,iBAAiB3B,EAAS4B,KAAKhG,YAAaoE,EAAS8B,QAAQ,GAAG/F,YAAa,EAAK4F,iBAAiB3B,EAAS4B,KAAKG,UAAW,EAAKJ,iBAAiB3B,EAAS4B,KAAKI,WACzPf,EAAU5B,MAAV,UAAqBW,EAAShD,MAC9BuE,IAnDG,6BAqDEL,EAAagB,OAAS,GArDxB,wBAsDHjB,EAAU5B,MAAV,mDAtDG,UAuDmB8B,EAAe,IAAKD,EAAaN,QAAQ,GAAG3C,OAAOmE,YAvDtE,QAwDmB,OADlBC,EAvDD,QAwDWZ,KACZH,EAAIe,EAAUrF,KAAMqF,EAAUX,IAAIvG,QAAS,EAAKwG,iBAAiBU,EAAUT,KAAKC,MAAO,EAAKF,iBAAiBU,EAAUT,KAAKhG,YAAayG,EAAUP,QAAQ,GAAG/F,YAAa,EAAK4F,iBAAiBU,EAAUT,KAAKG,UAAW,EAAKJ,iBAAiBU,EAAUT,KAAKI,WAChQf,EAAU5B,MAAV,UAAqBgD,EAAUrF,MAC/BuE,MAGAN,EAAU5B,MAAV,kEAAgCgD,EAAUZ,IAA1C,gGACAR,EAAUqB,OACVd,KAhEC,gCAoEPP,EAAU5B,MAAV,uJACA4B,EAAUqB,OACVd,IAtEO,gCA0ETP,EAAU5B,MAAV,kHACAmC,IA3ES,4CA7DA,wDA4IbG,iBAAmB,SAACE,GAElB,OADaU,KAAKC,MAAMX,EAAO,SA7IpB,EAiJbI,eAAiB,SAACQ,GAChB,QAAQ,GACN,KAAKA,GAAS,KAAOA,GAAS,IAAO,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAY+G,eAC/E,MACF,KAAKD,GAAS,KAAOA,GAAS,IAAO,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAYgH,UAC/E,MACF,KAAKF,GAAS,KAAOA,GAAS,IAAO,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAYiH,OAC/E,MACF,KAAKH,GAAS,KAAOA,GAAS,IAAO,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAYkH,OAC/E,MACF,KAAKJ,GAAS,KAAOA,GAAS,IAAO,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAYmH,aAC/E,MACF,KAAiB,MAAZL,EAAmB,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAYoH,QAClE,MACF,KAAKN,GAAW,KAAOA,GAAW,IAAO,EAAK9B,SAAS,CAAChF,YAAY,EAAKA,YAAYqH,WA7JvF,EAAKrH,YAAc,CACjB+G,aAAc,kBACdC,QAAS,WACTC,KAAM,cACNC,KAAM,UACNC,WAAY,SACZC,MAAO,eACPC,OAAQ,cATC,E,sEAwKX,OACE,yBAAK3H,UAAU,OACb,kBAAC,EAAD,CACAmD,YAAayE,KAAKhD,WAClBtB,WAAYsE,KAAKtE,WACjBX,cAAeiF,KAAKxD,MAAMzB,cAC1BJ,WAAYqF,KAAKxD,MAAM7B,WACvB2B,WAAY0D,KAAK1D,aAEjB,kBAAC,EAAD,CACAhE,KAAM0H,KAAKxD,MAAMlE,KACjBJ,QAAS8H,KAAKxD,MAAMtE,QACpBO,UAAWuH,KAAKxD,MAAM/D,UACtBE,WAAYqH,KAAKxD,MAAM7D,WACvBG,YAAakH,KAAKxD,MAAM1D,YACxBJ,YAAasH,KAAKxD,MAAM9D,YACxBG,IAAKmH,KAAKxD,MAAM3D,IAChBD,IAAKoH,KAAKxD,MAAM5D,W,GAtMCqH,aCKLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAACC,EAAD,MAAS3E,SAASC,eAAe,SD4H3C,kBAAmB2E,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.797e271d.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'weather-icons/css/weather-icons.css';\r\n// import Input from './input.jsx';\r\n\r\n\r\nfunction Weather(props) {\r\n    //console.log('>>>', props);\r\n    let flag = null;\r\n    if (props.country) {\r\n        flag = props.country.toLowerCase();   \r\n    }\r\n    return (\r\n        <div className=\"mainInfo\">\r\n            <div id=\"load\">\r\n                    <hr/><hr/><hr/><hr/>\r\n            </div>\r\n            <div id=\"content\">\r\n                <h2>{props.city}, {props.country}</h2>\r\n                <img src={`./flags/${flag}.png`} alt=\"flag\" />\r\n                <div className=\"temp\">\r\n                        <div>\r\n                            <h1>{props.main_temp}&deg;</h1>\r\n                        </div>\r\n                        <div>\r\n                            <i className={`wi ${props.weatherIcon}`}></i>\r\n                        </div>\r\n                </div>\r\n                <div className=\"additional\">\r\n                    <h3 className=\"feels_like\">Ощущается {props.feels_like}&deg;</h3>\r\n                    <h3 className=\"maxMin\">Мин {props.min}&deg; Макс {props.max}&deg;</h3>\r\n                    <h3 className=\"description\">{props.description}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nfunction Input(props) {\r\n\r\n    let records0, records1, records2, records3, records4, country0, country1, country2, country3, country4 = null;\r\n\r\n    const searchSelection = (name, alternate_names, country_code, numOfEl) => {\r\n        let split_names = [];\r\n        if (alternate_names) split_names = alternate_names.split(\",\");\r\n        split_names.push(name);\r\n\r\n        let res = [];\r\n        for (let i = 0; i < split_names.length; i++) {\r\n            const element = split_names[i];\r\n            if (element.startsWith(props.inputValue) === true || element.includes(props.inputValue)) {\r\n                res.push(element);\r\n            }\r\n        }\r\n\r\n        if (numOfEl === 0) {\r\n            records0 = res[0];\r\n            country0 = country_code.toLowerCase();\r\n        }\r\n        else if (numOfEl === 1)  {\r\n            records1 = res[0];\r\n            country1 = country_code.toLowerCase();\r\n        }\r\n        else if (numOfEl === 2)  {\r\n            records2 = res[0];\r\n            country2 = country_code.toLowerCase();\r\n        }\r\n        else if (numOfEl === 3)  {\r\n            records3 = res[0];\r\n            country3 = country_code.toLowerCase();\r\n        }\r\n        else if (numOfEl === 4)  {\r\n            records4 = res[0];\r\n            country4 = country_code.toLowerCase();\r\n        }\r\n    }\r\n    const rec = (num) => {\r\n        let name = props.searchResults[num].fields.name;\r\n        let alternate_names = props.searchResults[num].fields.alternate_names;\r\n        let country = props.searchResults[num].fields.country_code;\r\n        let res = { name, alternate_names, country}\r\n        return res;\r\n    }\r\n    let input0 = () => { let res = rec(0); name0 = res.name; country0 = res.country; searchSelection(res.name, res.alternate_names, res.country, 0);}\r\n    let input1 = () => { let res = rec(1); name1 = res.name; country1 = res.country; searchSelection(res.name, res.alternate_names, res.country, 1);}\r\n    let input2 = () => { let res = rec(2); name2 = res.name; country2 = res.country; searchSelection(res.name, res.alternate_names, res.country, 2);}\r\n    let input3 = () => { let res = rec(3); name3 = res.name; country3 = res.country; searchSelection(res.name, res.alternate_names, res.country, 3);}\r\n    let input4 = () => { res = rec(4); name4 = res.name; country4 = res.country; searchSelection(res.name, res.alternate_names, res.country, 4); }\r\n\r\n    let res = null;\r\n    let name0, name1, name2, name3, name4 = null;\r\n    switch (props.searchResults.length) {\r\n        case 1:\r\n            input0();\r\n            records1 = null; records2 = null; records3 = null; records4 = null;\r\n            break;\r\n        case 2:\r\n            input0(); input1();\r\n            records2 = null; records3 = null; records4 = null;\r\n            break;\r\n        case 3:\r\n            input0(); input1(); input2();\r\n            records3 = null;  records4 = null;\r\n            break;\r\n        case 4:\r\n            input0(); input1(); input2(); input3();\r\n            records4 = null;\r\n            break;\r\n        case 5:\r\n            input0(); input1(); input2(); input3(); input4();\r\n            break;\r\n\r\n        default:\r\n            records0 = null; records1 = null; records2 = null; records3 = null; records4 = null;\r\n            break;\r\n    }\r\n\r\n\r\n    const disableSearch = () => {\r\n        setTimeout(() => {\r\n            document.getElementById('searchTable').style.display = 'none';\r\n        }, 300);\r\n    }\r\n    return (\r\n    <div className=\"searchBox\">\r\n        <form onSubmit={props.loadWeather} id=\".move\">\r\n            <button id=\"inputBtn\">Посмотреть</button>\r\n            <input name=\"searchBar\"\r\n            className=\"searchBar\"\r\n            id=\"searchBar\"\r\n            placeholder=\"Введите ваш город\"\r\n            onInput={props.searchLive}\r\n            autoComplete=\"off\"\r\n            onBlur={disableSearch}\r\n            maxLength=\"20\"\r\n            onFocus={() => {document.getElementById('searchBar').value='';}}\r\n            ></input>\r\n            \r\n        </form>\r\n        <table id=\"searchTable\"><tbody>\r\n            <tr><th>\r\n                <button\r\n                id=\"btn0\"\r\n                onClick={()=>props.clearInput(name0, country0)}>\r\n                    {records0}\r\n                    <img className=\"searchBtn\" src={`./flags/${country0}.png`} alt=\"flag\" />\r\n                </button>\r\n            </th></tr>\r\n            <tr><th>\r\n                <button\r\n                id=\"btn1\"\r\n                onClick={()=>props.clearInput(name1, country1)}>\r\n                    {records1}\r\n                    <img className=\"searchBtn\" src={`./flags/${country1}.png`} alt=\"flag\" />\r\n                </button>\r\n            </th></tr>\r\n            <tr><th>\r\n                <button\r\n                id=\"btn2\"\r\n                onClick={()=>props.clearInput(name2, country2)}>\r\n                    {records2}\r\n                    <img className=\"searchBtn\" src={`./flags/${country2}.png`} alt=\"flag\" />\r\n                </button>\r\n            </th></tr>\r\n            <tr><th>\r\n                <button\r\n                id=\"btn3\"\r\n                onClick={()=>props.clearInput(name3, country3)}>\r\n                    {records3}\r\n                    <img className=\"searchBtn\" src={`./flags/${country3}.png`} alt=\"flag\" />\r\n                </button>\r\n            </th></tr>\r\n            <tr><th>\r\n                <button\r\n                id=\"btn4\"\r\n                onClick={()=>props.clearInput(name4, country4)}>\r\n                    {records4}\r\n                    <img className=\"searchBtn\" src={`./flags/${country4}.png`} alt=\"flag\" />\r\n                </button>\r\n            </th></tr>\r\n        </tbody></table>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, {Component} from 'react';\nimport Weather from \"./components/weather.jsx\";\nimport Input from './components/input.jsx';\n\nconst key = \"d60e9c0fd732e63411be26d3282fe316\";\n\n\nclass WeatherApp extends Component {\n  state = {\n    city: null,\n    country: null,\n    main_temp: null,\n    feels_like: null,\n    description: null,\n    weatherIcon: null,\n    max: null,\n    min: null,\n    searchResults: [],\n    inputValue: null\n  }\n  constructor(){\n    super();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-day-rain\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    }\n  }\n  getElement = (value) => {\n    let res = document.getElementById(value);\n    return res\n  }\n  requestSities = async () => {\n    let callAPI = await fetch(`https://data.opendatasoft.com/api/records/1.0/search/?dataset=geonames-all-cities-with-a-population-1000%40public&q=${this.getElement('searchBar').value}&rows=5&facet=timezone&facet=country`);\n    let response = await callAPI.json();\n    return response\n  }\n\n  clearInput = (name, country) => {\n    this.getElement('searchBar').value = name + \", \"+ country;\n    this.getWeather(null, 'ATTEMPT 2yes');\n    this.getElement('searchTable').style.display = 'none';\n  }\n\n  searchLive = async () => {\n    let value = this.getElement('searchBar').value.charAt(0).toUpperCase() + this.getElement('searchBar').value.slice(1);\n    let btn = {\n      btn0: this.getElement('btn0'),\n      btn1: this.getElement('btn1'),\n      btn2: this.getElement('btn2'),\n      btn3: this.getElement('btn3'),\n      btn4: this.getElement('btn4')\n    }\n    let response = await this.requestSities();\n\n    this.setState({\n      searchResults: response.records,\n      inputValue: value\n    });\n\n    if (btn.btn0.innerText !== \"\" || btn.btn1.innerText !== \"\" || btn.btn2.innerText !== \"\" || btn.btn3.innerText !== \"\" || btn.btn4.innerText !== \"\") {\n      this.getElement('searchTable').style.display = 'block';\n    } else this.getElement('searchTable').style.display = 'none';\n\n    btn.btn0.style.display = 'none';\n    btn.btn1.style.display = 'none';\n    btn.btn2.style.display = 'none';\n    btn.btn3.style.display = 'none';\n    btn.btn4.style.display = 'none';\n\n    if (btn.btn0.innerText !== \"\") btn.btn0.style.display = 'block';\n    if (btn.btn1.innerText !== \"\") btn.btn1.style.display = 'block';\n    if (btn.btn2.innerText !== \"\") btn.btn2.style.display = 'block';\n    if (btn.btn3.innerText !== \"\") btn.btn3.style.display = 'block';\n    if (btn.btn4.innerText !== \"\") btn.btn4.style.display = 'block';\n  }\n\n  getWeather = async (event) => {\n    document.querySelector('#content').style.display = \"none\";\n    document.querySelector('.mainInfo').style.display = \"block\";\n    document.querySelector('#load').style.display = \"block\";\n\n    if (event) event.preventDefault();\n\n    this.getElement('searchTable').style.display = 'none';\n    let searchBar = this.getElement('searchBar');\n    let cityResponse = await this.requestSities();\n    let requestWeather = async (whatRequest,request) => {\n      let callAPI = await fetch(`https://api.openweathermap.org/data/2.5/weather?${whatRequest}=${request}&appid=${key}&lang=ru`);\n      let response = await callAPI.json();\n      return response;\n    }\n    let set = (city, country, main_temp, feels_like, description, max, min) => {\n      this.setState({\n        city: city,\n        country: country,\n        main_temp: main_temp,\n        feels_like: feels_like,\n        description: description,\n        max: max,\n        min: min\n      });\n    }\n    let switchLoader = () => {\n        document.querySelector('#load').style.display = \"none\";\n        document.querySelector('#content').style.display = \"block\";\n    }\n    let hideAllContent = () => {\n      document.querySelector('#content').style.display = \"none\";\n      document.querySelector('.mainInfo').style.display = \"none\";\n      document.querySelector('#load').style.display = \"none\";\n    }\n\n    if (searchBar.value !== \"\" && searchBar.value !== \"error, введите город\") {\n      let response = await requestWeather(\"q\", searchBar.value);\n      searchBar.value = response.name;\n\n      if (response.cod === 200) {\n        set(response.name, response.sys.country, this.calculateCulsius(response.main.temp), this.calculateCulsius(response.main.feels_like), response.weather[0].description, this.calculateCulsius(response.main.temp_max), this.calculateCulsius(response.main.temp_min));\n        this.getWeatherIcon(response.weather[0].id);\n        switchLoader();\n      }\n      else if (cityResponse.nhits >= 1) {\n        searchBar.value = `Загрузка`;\n        response = await requestWeather(\"id\", cityResponse.records[0].fields.geoname_id);\n        if (response.cod === 200) {\n            set(response.name, response.sys.country, this.calculateCulsius(response.main.temp), this.calculateCulsius(response.main.feels_like), response.weather[0].description, this.calculateCulsius(response.main.temp_max), this.calculateCulsius(response.main.temp_min));\n            searchBar.value = `${response.name}`;\n            switchLoader();\n        }\n        else if (cityResponse.nhits >= 1) {\n            searchBar.value = `Загрузка`;\n            let response3 = await requestWeather(\"q\", cityResponse.records[0].fields.ascii_name);\n            if (response3.cod === 200) {\n              set(response3.name, response3.sys.country, this.calculateCulsius(response3.main.temp), this.calculateCulsius(response3.main.feels_like), response3.weather[0].description, this.calculateCulsius(response3.main.temp_max), this.calculateCulsius(response3.main.temp_min));\n              searchBar.value = `${response3.name}`;\n              switchLoader();\n            }\n            else{\n              searchBar.value = `Ошибка код ${response3.cod} попробуте заново`;\n              searchBar.blur();\n              hideAllContent();\n            }\n        }\n      } else{\n        searchBar.value = `ошибка, введите другой город`;\n        searchBar.blur();\n        hideAllContent();\n      }\n    }\n    else {\n      searchBar.value = `ошибка, введите город`;\n      hideAllContent();\n    }\n  }\n\n  calculateCulsius = (temp) => {\n    let result = Math.floor(temp - 273.15);\n    return result;\n  }\n\n  getWeatherIcon = (rangeId) => {\n    switch (true) {\n      case rangeId>=200 && rangeId<=232:   this.setState({weatherIcon:this.weatherIcon.Thunderstorm})\n        break;\n      case rangeId>=300 && rangeId<=321:   this.setState({weatherIcon:this.weatherIcon.Drizzle})\n        break;\n      case rangeId>=500 && rangeId<=531:   this.setState({weatherIcon:this.weatherIcon.Rain})\n        break;\n      case rangeId>=600 && rangeId<=622:   this.setState({weatherIcon:this.weatherIcon.Snow})\n        break;\n      case rangeId>=701 && rangeId<=781:   this.setState({weatherIcon:this.weatherIcon.Atmosphere})\n        break;\n      case rangeId === 800:   this.setState({weatherIcon:this.weatherIcon.Clear})\n        break;\n      case rangeId >= 801 && rangeId <= 804:   this.setState({weatherIcon:this.weatherIcon.Clouds})\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Input\n        loadWeather={this.getWeather}\n        searchLive={this.searchLive}\n        searchResults={this.state.searchResults}\n        inputValue={this.state.inputValue}\n        clearInput={this.clearInput} />\n\n        <Weather\n        city={this.state.city}\n        country={this.state.country}\n        main_temp={this.state.main_temp}\n        feels_like={this.state.feels_like}\n        description={this.state.description}\n        weatherIcon={this.state.weatherIcon}\n        max={this.state.max}\n        min={this.state.min}\n        />\n      </div>\n    );\n  }\n}\n \nexport default WeatherApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}